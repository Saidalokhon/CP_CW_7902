//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CP_CW_7902_UI.TerminalService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TerminalService.ITerminalService")]
    public interface ITerminalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/StartCollectingSwipes", ReplyAction="http://tempuri.org/ITerminalService/StartCollectingSwipesResponse")]
        bool StartCollectingSwipes(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/StartCollectingSwipes", ReplyAction="http://tempuri.org/ITerminalService/StartCollectingSwipesResponse")]
        System.Threading.Tasks.Task<bool> StartCollectingSwipesAsync(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/GetStatus", ReplyAction="http://tempuri.org/ITerminalService/GetStatusResponse")]
        System.Collections.Generic.Dictionary<string, string> GetStatus(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/GetStatus", ReplyAction="http://tempuri.org/ITerminalService/GetStatusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatusAsync(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/TruncateDatabase", ReplyAction="http://tempuri.org/ITerminalService/TruncateDatabaseResponse")]
        void TruncateDatabase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/TruncateDatabase", ReplyAction="http://tempuri.org/ITerminalService/TruncateDatabaseResponse")]
        System.Threading.Tasks.Task TruncateDatabaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/GetDatabase", ReplyAction="http://tempuri.org/ITerminalService/GetDatabaseResponse")]
        string[][] GetDatabase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/GetDatabase", ReplyAction="http://tempuri.org/ITerminalService/GetDatabaseResponse")]
        System.Threading.Tasks.Task<string[][]> GetDatabaseAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITerminalServiceChannel : CP_CW_7902_UI.TerminalService.ITerminalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TerminalServiceClient : System.ServiceModel.ClientBase<CP_CW_7902_UI.TerminalService.ITerminalService>, CP_CW_7902_UI.TerminalService.ITerminalService {
        
        public TerminalServiceClient() {
        }
        
        public TerminalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TerminalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TerminalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TerminalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool StartCollectingSwipes(string clientToken) {
            return base.Channel.StartCollectingSwipes(clientToken);
        }
        
        public System.Threading.Tasks.Task<bool> StartCollectingSwipesAsync(string clientToken) {
            return base.Channel.StartCollectingSwipesAsync(clientToken);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetStatus(string clientToken) {
            return base.Channel.GetStatus(clientToken);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatusAsync(string clientToken) {
            return base.Channel.GetStatusAsync(clientToken);
        }
        
        public void TruncateDatabase() {
            base.Channel.TruncateDatabase();
        }
        
        public System.Threading.Tasks.Task TruncateDatabaseAsync() {
            return base.Channel.TruncateDatabaseAsync();
        }
        
        public string[][] GetDatabase() {
            return base.Channel.GetDatabase();
        }
        
        public System.Threading.Tasks.Task<string[][]> GetDatabaseAsync() {
            return base.Channel.GetDatabaseAsync();
        }
    }
}
